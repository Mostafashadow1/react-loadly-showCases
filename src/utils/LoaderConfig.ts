import {
  commonProps,
  type ILoaderConfig,
  type LoaderKind,
} from "@/types/ILoaderConfig";

export const LOADER_CONFIGS: { [K in LoaderKind]: ILoaderConfig<K> } = {
  spin: {
    component: () => import('react-loadly').then(m => ({ default: m.SpinLoader })),
    title: "Spin Loader",
    interface: "IBaseLoaderProps",
    commonProps: commonProps,
    uniqueProps: [],
  },
  pulse: {
    component: () => import('react-loadly').then(m => ({ default: m.PulseLoader })),
    title: "Pulse Loader",
    interface: "IGeometricLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["count", "borderWidth"],
  },
  wave: {
    component: () => import('react-loadly').then(m => ({ default: m.WaveLoader })),
    title: "Wave Loader",
    interface: "IFluidLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["fluidity", "amplitude", "secondaryColor"],
  },
  grid: {
    component: () => import('react-loadly').then(m => ({ default: m.GridLoader })),
    title: "Grid Loader",
    interface: "IGeometricLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["count", "borderWidth", "secondaryColor"],
  },
  typing: {
    component: () => import('react-loadly').then(m => ({ default: m.TypingLoader })),
    title: "Typing Loader",
    interface: "ITextLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["loop", "charDelay", "fontWeight", "fontFamily"],
  },
  logo: {
    component: () => import('react-loadly').then(m => ({ default: m.LogoSpinLoader })),
    title: "Logo Loader",
    interface: "ILogoLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["src", "alt", "animationType", "glowIntensity"],
  },
  bars: {
    component: () => import('react-loadly').then(m => ({ default: m.BarsLoader })),
    title: "Bars Loader",
    interface: "IGeometricLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["count", "borderWidth", "secondaryColor"],
  },
  dots: {
    component: () => import('react-loadly').then(m => ({ default: m.DotsLoader })),
    title: "Dots Loader",
    interface: "IGeometricLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["count", "borderWidth", "secondaryColor"],
  },
  blob: {
    component: () => import('react-loadly').then(m => ({ default: m.BlobLoader })),
    title: "Blob Loader",
    interface: "IFluidLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["fluidity", "amplitude", "secondaryColor"],
  },
  ring: {
    component: () => import('react-loadly').then(m => ({ default: m.RingLoader })),
    title: "Ring Loader",
    interface: "IGeometricLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["borderWidth", "count"],
  },
  flow: {
    component: () => import('react-loadly').then(m => ({ default: m.FlowLoader })),
    title: "Flow Loader",
    interface: "IFluidLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["fluidity", "amplitude", "secondaryColor"],
  },
  rotate: {
    component: () => import('react-loadly').then(m => ({ default: m.RotateLoader })),
    title: "Rotate Loader",
    interface: "IGeometricLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["count", "borderWidth", "secondaryColor"],
  },
  element: {
    component: () => import('react-loadly').then(m => ({ default: m.ElementLoader })),
    title: "Element Loader",
    interface: "IElementLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["animationType", "children", "glowIntensity"],
  },
  bounce: {
    component: () => import('react-loadly').then(m => ({ default: m.BounceLoader })),
    title: "Bounce Loader",
    interface: "IGeometricLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["count", "borderWidth", "secondaryColor"],
  },

  skeleton: {
    component: () => import('react-loadly').then(m => ({ default: m.SkeletonLoader })),
    title: "Skeleton Loader",
    interface: "ISkeletonLoaderProps",
    commonProps: commonProps,
    uniqueProps: [
      "variant",
      "shimmer",
      "shimmerColor",
      "highlightColor",
      "spacing",
      "borderRadius",
      "lines",
      "waveDirection",
      "waveWidth",
      "aria-label",
    ],
  },

  spinDots: {
    component: () => import('react-loadly').then(m => ({ default: m.SpinDotsLoader })),
    title: "Spin Dots Loader",
    interface: "ISpinDotsLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["dots", "gap"],
    isNew: true,
  },
  heatmap: {
    component: () => import('react-loadly').then(m => ({ default: m.HeatmapLoader })),
    title: "Heatmap Loader",
    interface: "IHeatmapLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["rows", "cols"],
    isNew: true,
  },
  morph: {
    component: () => import('react-loadly').then(m => ({ default: m.MorphLoader })),
    title: "Morph Loader",
    interface: "IMorphLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["variant", "speed"],
    isNew: true,
  },
  progressRing: {
    component: () => import('react-loadly').then(m => ({ default: m.ProgressRingLoader })),
    title: "Progress Ring Loader",
    interface: "IProgressRingLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["progress", "thickness", "secondaryColor"],
    isNew: true,
  },
  stair: {
    component: () => import('react-loadly').then(m => ({ default: m.StairLoader })),
    title: "Stair Loader",
    interface: "IStairLoaderProps",
    commonProps: commonProps,
    uniqueProps: ["count", "borderWidth", "secondaryColor"],
    isNew: true,
  },
  squares: {
    component: () => import('react-loadly').then(m => ({ default: m.SquaresLoader })),
    title: "Squares Loader",
    interface: "ISquaresLoaderProps",
    commonProps,
    uniqueProps: ["count", "borderWidth", "secondaryColor"],
    isNew: true,
  },

  ripple: {
    component: () => import('react-loadly').then(m => ({ default: m.RippleLoader })),
    title: "Ripple Loader",
    interface: "IRippleLoaderProps",
    commonProps,
    uniqueProps: ["count", "borderWidth", "secondaryColor"],
    isNew: true,
  },

  orbit: {
    component: () => import('react-loadly').then(m => ({ default: m.OrbitLoader })),
    title: "Orbit Loader",
    interface: "IOrbitLoaderProps",
    commonProps,
    uniqueProps: ["count", "secondaryColor", "borderWidth"],
    isNew: true,
  },

  plane: {
    component: () => import('react-loadly').then(m => ({ default: m.PlaneLoader })),
    title: "Plane Loader",
    interface: "IPlaneLoaderProps",
    commonProps,
    uniqueProps: ["borderWidth", "secondaryColor"],
    isNew: true,
  },

  hashtag: {
    component: () => import('react-loadly').then(m => ({ default: m.HashtagLoader })),
    title: "Hashtag Loader",
    interface: "IHashtagLoaderProps",
    commonProps,
    uniqueProps: ["count", "borderWidth", "secondaryColor"],
    isNew: true,
  },

  snake: {
    component: () => import('react-loadly').then(m => ({ default: m.SnakeLoader })),
    title: "Snake Loader",
    interface: "ISnakeLoaderProps",
    commonProps,
    uniqueProps: ["count", "secondaryColor", "borderWidth"],
    isNew: true,
  },
};
